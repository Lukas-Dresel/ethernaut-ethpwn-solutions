#!/usr/bin/env python3

import os
import sys
from ethpwn.prelude import *

import solcx

#!/usr/bin/env python3

from web3 import Web3
from time import sleep

import argparse

def parse_value(s):
    if s.strip().endswith('ether'):
        return Web3.to_wei(s.strip()[:-5].strip(), 'ether')
    elif s.strip().endswith('gwei'):
        return Web3.to_wei(s.strip()[:-4].strip(), 'gwei')
    else:
        return int(s)

parser = argparse.ArgumentParser()
parser.add_argument('exploit_contract_source', type=str)
parser.add_argument('proxy_addr', type=str)
parser.add_argument('--force', action='store_true', help="Force the exploit even if estimage_gas says it will fail")
parser.add_argument('--value', type=parse_value, default=0, help="Value to send with the exploit transaction")
parser.add_argument('-n', '--dry-run', action='store_true', help="Don't actually send the exploit transaction, only parse the contracts")
parser.add_argument('--wallet', type=str, default='Laptop CTF Metamask', help="Wallet to use for the exploit transaction")
ARGS = parser.parse_args()

MY_WALLET = get_wallet(ARGS.wallet)
assert MY_WALLET is not None

context.log_level = 'DEBUG'

context.connect_http('https://eth-sepolia.g.alchemy.com/v2/CIlvNRJd1iqhTV5d_KIBxWX_qCq0j71v')
context.default_from_addr = MY_WALLET.address
context.default_signing_key = MY_WALLET.private_key

solidity_includes = os.path.dirname(os.path.abspath(__file__)) + '/__solidity_includes/'

CONTRACT_METADATA.compiler.add_import_remappings({
    'openzeppelin-contracts-08': solidity_includes + 'openzeppelin-contracts-0.8/contracts',
})

# import ipdb; ipdb.set_trace()
CONTRACT_METADATA.add_solidity_files([ARGS.exploit_contract_source])

if not ARGS.dry_run:
    with CONTRACT_METADATA['Exploit'].deploy_destructible(ARGS.proxy_addr, force=ARGS.force) as (tx_hash, target):
        print(f"Exploit contract is at {target.address}")

        transact(target.functions.exploit(), value=ARGS.value, force=ARGS.force)
else:
    for file_name, contract_name, metadata in CONTRACT_METADATA.all_contracts():
        print(f"{file_name}:{contract_name}")
